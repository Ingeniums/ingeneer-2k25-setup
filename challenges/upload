#!/bin/bash

VENV_DIR="venv"

SRC_DIR="./ready"

echo "Checking for Python virtual environment in ${VENV_DIR}..."
if [ -d "$VENV_DIR" ]; then
    echo "Virtual environment found. Activating..."
    source "${VENV_DIR}/bin/activate"
else
    echo "Virtual environment not found. Creating one..."
    python3 -m venv "$VENV_DIR"
    if [ $? -ne 0 ]; then
        echo "Error: Failed to create virtual environment. Is python3 installed?"
        exit 1
    fi
    echo "Virtual environment created. Activating..."
    source "${VENV_DIR}/bin/activate"
fi

if [ -z "$VIRTUAL_ENV" ]; then
    echo "Error: Failed to activate the virtual environment."
    exit 1
fi
echo "Virtual environment activated."

echo "Checking if ctfcli is installed..."
if ! which ctfcli > /dev/null 2>&1; then
    echo "ctfcli not found. Installing with pip..."
    pip install ctfcli
    if [ $? -ne 0 ]; then
        echo "Error: Failed to install ctfcli. Please check your pip installation or environment."
        deactivate
        exit 1
    fi
    echo "ctfcli installed."
else
    echo "ctfcli found."
fi

echo "Checking if ctfcli project is initialized (.ctf/config)..."
if [ ! -f ".ctf/config" ]; then
    echo "Error: ctfcli project is not initialized in the current directory."
    echo "Please run 'ctf init' first to connect to your CTFd instance."
    deactivate
    exit 1
fi
echo "ctfcli project initialized."

echo "Looking for challenges in ${SRC_DIR}/..."

if [ ! -d "$SRC_DIR" ]; then
    echo "Error: Source directory '${SRC_DIR}' not found."
    echo "Please create the '${SRC_DIR}' directory and place your challenges inside (e.g., ${SRC_DIR}/category/challenge/challenge.yml)."
    deactivate
    exit 1
fi

find "$SRC_DIR" -mindepth 1 -maxdepth 1 -type d | while read category_dir; do
    category_name=$(basename "$category_dir")

    find "$category_dir" -mindepth 1 -maxdepth 1 -type d | while read challenge_dir; do
        challenge_name=$(basename "$challenge_dir")
        challenge_path="${category_name}/${challenge_name}"
        challenge_src_path="${SRC_DIR}/${category_name}/${challenge_name}"

        if [ -f "${challenge_src_path}/challenge.yml" ]; then
            echo "--- Processing Challenge: ${category_name}/${challenge_name} ---"

            echo "Attempting to sync challenge: ${challenge_path}"
            ctf challenge sync "$challenge_src_path"
            sync_exit_code=$?

            if [ $sync_exit_code -ne 0 ]; then
                echo "Sync failed for ${challenge_path} (exit code ${sync_exit_code}). This usually means the challenge doesn't exist on CTFd yet."
                echo "Attempting to add challenge from source: ${challenge_src_path}"

                ctf challenge add "$challenge_src_path"
                add_exit_code=$?

                if [ $add_exit_code -ne 0 ]; then
                    echo "Error: Failed to add challenge ${challenge_src_path} (exit code ${add_exit_code}). Skipping install."
                else
                    echo "Challenge added successfully."
                    echo "Attempting to install challenge: ${challenge_path}"

                    ctf challenge install "$challenge_src_path"
                    install_exit_code=$?

                    if [ $install_exit_code -ne 0 ]; then
                        echo "Error: Failed to install challenge ${challenge_path} (exit code ${install_exit_code})."
                    else
                         echo "Install successful for ${challenge_path}."
                    fi
                fi
            else
                echo "Sync successful for ${challenge_path}."
            fi
        else
            echo "Skipping directory ${challenge_dir}: challenge.yml not found."
        fi
        echo ""
    done
done

echo "Finished processing challenges."
echo "Deactivating virtual environment."
deactivate

echo "Script finished."
